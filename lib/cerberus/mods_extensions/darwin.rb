module Cerberus::ModsExtensions::Darwin
  extend ActiveSupport::Concern

  included do
    def self.dwr(pth, hsh={})
      return { path: pth, namespace_prefix: "dwr"}.merge(hsh)
    end

    def self.dwc(pth, hsh={})
      return { path: pth, namespace_prefix: "dwc", index_as: [:stored_searchable, :facetable]}.merge(hsh)
    end

    def self.dcterms(pth, hsh={})
      return { path: pth, namespace_prefix: "dcterms", index_as: [:stored_searchable, :facetable]}.merge(hsh)
    end

    extend_terminology do |t|
      t.darwin_extension(path: "extension", namespace_prefix: "mods"){
        t.darwin(dwr "SimpleDarwinRecord"){
          t.type(dcterms "type")
          t.modified(dcterms "modified")
          t.language(dcterms "language")
          t.license(dcterms "license")
          t.rights_holder(dcterms "rightsHolder")
          t.access_rights(dcterms "accessRights")
          t.bibliographic_citation(dcterms "bibliographicCitation")
          t.references(dcterms "references")
          t.darwin_institution_id(dwc "institutionID")
          t.collection_id(dwc "collectionID")
          t.dataset_id(dwc "datasetID")
          t.institution_code(dwc "institutionCode")
          t.collection_code(dwc "collectionCode")
          t.dataset_name(dwc "datasetName")
          t.owner_institution_code(dwc "ownerInstitutionCode")
          t.basis_of_record(dwc "basisOfRecord")
          t.information_withheld(dwc "informationWithheld")
          t.data_generalizations(dwc "dataGeneralizations")
          t.dynamic_properties(dwc "dynamicProperties")
          t.occurrence_id(dwc "occurrenceID")
          t.catalog_number(dwc "catalogNumber")
          t.record_number(dwc "recordNumber")
          t.recorded_by(dwc "recordedBy")
          t.individual_count(dwc "individualCount")
          t.organism_quantity(dwc "organismQuantity")
          t.organism_quantity_type(dwc "organismQuantityType")
          t.sex(dwc "sex")
          t.life_stage(dwc "lifeStage")
          t.reproductive_condition(dwc "reproductiveCondition")
          t.behavior(dwc "behavior")
          t.establishment_means(dwc "establishmentMeans")
          t.occurrence_status(dwc "occurrenceStatus")
          t.preparations(dwc "preparations")
          t.disposition(dwc "disposition")
          t.associated_media(dwc "associatedMedia")
          t.associated_references(dwc "associatedReferences")
          t.associated_sequences(dwc "associatedSequences")
          t.associated_taxa(dwc "associatedTaxa")
          t.other_catalog_numbers(dwc "otherCatalogNumbers")
          t.occurrence_remarks(dwc "occurrenceRemarks")
          t.organism_id(dwc "organismID")
          t.organism_name(dwc "organismName")
          t.organism_scope(dwc "organismScope")
          t.associated_occurrences(dwc "associatedOccurrences")
          t.associated_organisms(dwc "associatedOrganisms")
          t.previous_identifications(dwc "previousIdentifications")
          t.organism_remarks(dwc "organismRemarks")
          t.material_sample_id(dwc "materialSampleID")
          t.event_id(dwc "eventID")
          t.parent_event_id(dwc "parentEventID")
          t.field_number(dwc "fieldNumber")
          t.event_date(dwc "eventDate")
          t.event_time(dwc "eventTime")
          t.start_day_of_year(dwc "startDayOfYear")
          t.end_day_of_year(dwc "endDayOfYear")
          t.year(dwc "year")
          t.month(dwc "month")
          t.day(dwc "day")
          t.verbatim_event_date(dwc "verbatimEventDate")
          t.habitat(dwc "habitat")
          t.sampling_protocol(dwc "samplingProtocol")
          t.sampling_effort(dwc "samplingEffort")
          t.sample_size_value(dwc "sampleSizeValue")
          t.sample_size_unit(dwc "sampleSizeUnit")
          t.field_notes(dwc "fieldNotes")
          t.event_remarks(dwc "eventRemarks")
          t.location_id(dwc "locationID")
          t.higher_geography_id(dwc "higherGeographyID")
          t.higher_geography(dwc "higherGeography")
          t.continent(dwc "continent")
          t.waterbody(dwc "waterbody")
          t.island_group(dwc "islandGroup")
          t.island(dwc "island")
          t.country(dwc "country")
          t.country_code(dwc "countryCode")
          t.state_province(dwc "stateProvince")
          t.county(dwc "county")
          t.municipality(dwc "municipality")
          t.locality(dwc "locality")
          t.verbatim_locality(dwc "verbatimLocality")
          t.minimum_elevation_in_meters(dwc "minimumElevationInMeters")
          t.maximum_elevation_in_meters(dwc "maximumElevationInMeters")
          t.verbatim_elevation(dwc "verbatimElevation")
          t.minimum_depth_in_meters(dwc "minimumDepthInMeters")
          t.maximum_depth_in_meters(dwc "maximumDepthInMeters")
          t.verbatim_depth(dwc "verbatimDepth")
          t.minimum_distance_above_surface_in_meters(dwc "minimumDistanceAboveSurfaceInMeters")
          t.maximum_distance_above_surface_in_meters(dwc "maximumDistanceAboveSurfaceInMeters")
          t.location_according_to(dwc "locationAccordingTo")
          t.location_remarks(dwc "locationRemarks")
          t.decimal_latitude(dwc "decimalLatitude")
          t.decimal_longitude(dwc "decimalLongitude")
          t.geodetic_datum(dwc "geodeticDatum")
          t.coordinate_uncertainty_in_meters(dwc "coordinateUncertaintyInMeters")
          t.coordinate_precision(dwc "coordinatePrecision")
          t.point_radius_spatial_fit(dwc "pointRadiusSpatialFit")
          t.verbatim_coordinates(dwc "verbatimCoordinates")
          t.verbatim_latitude(dwc "verbatimLatitude")
          t.verbatim_longitude(dwc "verbatimLongitude")
          t.verbatim_coordinate_system(dwc "verbatimCoordinateSystem")
          t.verbatim_SRS(dwc "verbatimSRS")
          t.footprint_WKT(dwc "footprintWKT")
          t.footprint_SRS(dwc "footprintSRS")
          t.footprint_spatial_fit(dwc "footprintSpatialFit")
          t.georeferenced_by(dwc "georeferencedBy")
          t.georeferenced_date(dwc "georeferencedDate")
          t.georeference_protocol(dwc "georeferenceProtocol")
          t.georeference_sources(dwc "georeferenceSources")
          t.georeference_verification_status(dwc "georeferenceVerificationStatus")
          t.georeference_remarks(dwc "georeferenceRemarks")
          t.geological_context_id(dwc "geologicalContextID")
          t.earliest_eon_or_lowest_eonothem(dwc "earliestEonOrLowestEonothem")
          t.latest_eon_or_highest_eonothem(dwc "latestEonOrHighestEonothem")
          t.earliest_era_or_lowest_erathem(dwc "earliestEraOrLowestErathem")
          t.latest_era_or_highest_erathem(dwc "latestEraOrHighestErathem")
          t.earliest_period_or_lowest_system(dwc "earliestPeriodOrLowestSystem")
          t.latest_period_or_highest_system(dwc "latestPeriodOrHighestSystem")
          t.earliest_epoch_or_lowest_series(dwc "earliestEpochOrLowestSeries")
          t.latest_epoch_or_highest_series(dwc "latestEpochOrHighestSeries")
          t.earliest_age_or_lowest_stage(dwc "earliestAgeOrLowestStage")
          t.latest_age_or_highest_stage(dwc "latestAgeOrHighestStage")
          t.lowest_biostratigraphic_zone(dwc "lowestBiostratigraphicZone")
          t.highest_biostratigraphic_zone(dwc "highestBiostratigraphicZone")
          t.lithostratigraphic_terms(dwc "lithostratigraphicTerms")
          t.group(dwc "group")
          t.formation(dwc "formation")
          t.member(dwc "member")
          t.bed(dwc "bed")
          t.identification_id(dwc "identificationID")
          t.identification_qualifier(dwc "identificationQualifier")
          t.type_status(dwc "typeStatus")
          t.identified_by(dwc "identifiedBy")
          t.date_identified(dwc "dateIdentified")
          t.identification_references(dwc "identificationReferences")
          t.identification_verification_status(dwc "identificationVerificationStatus")
          t.identification_remarks(dwc "identificationRemarks")
          t.taxon_id(dwc "taxonID")
          t.scientific_name_id(dwc "scientificNameID")
          t.accepted_name_usage_id(dwc "acceptedNameUsageID")
          t.parent_name_usage_id(dwc "parentNameUsageID")
          t.original_name_usage_id(dwc "originalNameUsageID")
          t.name_according_to_id(dwc "nameAccordingToID")
          t.name_published_in_id(dwc "namePublishedInID")
          t.taxon_concept_id(dwc "taxonConceptID")
          t.scientific_name(dwc "scientificName")
          t.accepted_name_usage(dwc "acceptedNameUsage")
          t.parent_name_usage(dwc "parentNameUsage")
          t.original_name_usage(dwc "originalNameUsage")
          t.name_according_to(dwc "nameAccordingTo")
          t.name_published_in(dwc "namePublishedIn")
          t.name_published_in_year(dwc "namePublishedInYear")
          t.higher_classification(dwc "higherClassification")
          t.kingdom(dwc "kingdom")
          t.phylum(dwc "phylum")
          t.klass(dwc "class")
          t.order(dwc "order")
          t.family(dwc "family")
          t.genus(dwc "genus")
          t.subgenus(dwc "subgenus")
          t.specific_epithet(dwc "specificEpithet")
          t.infraspecific_epithet(dwc "infraspecificEpithet")
          t.taxon_rank(dwc "taxonRank")
          t.verbatim_taxon_rank(dwc "verbatimTaxonRank")
          t.scientific_name_authorship(dwc "scientificNameAuthorship")
          t.vernacular_name(dwc "vernacularName")
          t.nomenclatural_code(dwc "nomenclaturalCode")
          t.taxonomic_status(dwc "taxonomicStatus")
          t.nomenclatural_status(dwc "nomenclaturalStatus")
          t.taxon_remarks(dwc "taxonRemarks")
        }
      }
    end

    private_class_method :dwr
    private_class_method :dwc
    private_class_method :dcterms
  end
end
