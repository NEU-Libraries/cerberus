.alert.alert-warning.alert-video.hidden
- if @thumbs.length > 0
  - poster = @thumbs[3]
  .replace_thumbs.hidden
    = render 'shared/thumbnails/full_picture'
- type = dir = encoded = provider = pid = ''
- caption_url = nil
- @content_objects.each do |content|
  -if content.klass == "VideoFile" || content.klass == "AudioFile"
    - if (!current_user.nil? && (current_user.can? :read, content)) || content.public?
      - pid = content.pid
      - dir = content.pid_hash[0,2]
      - encoded = content.encode
      - if content.mime_type == 'video/mp4' || content.mime_type == 'video/quicktime'
        - type = 'MP4'
        - provider = 'video'
      - elsif content.mime_type == 'audio/mpeg'
        - type = 'MP3'
        - provider = 'sound'
  -elsif content.klass == "TextFile"
    - caption_url = download_url(content.pid, {datastream_id: 'content'})
#player
  :javascript
    jwplayer.key="6keHwedw4fQnScJOPJbFMey9UxSWktA1KWf1vIe5fGc="
  :javascript
    var provider = "#{provider}"
    var primary = "html5";
    var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
    var is_safari = navigator.userAgent.indexOf("Safari") > -1;
    if ((is_chrome)&&(is_safari)) {is_safari=false;}
    jwplayer("player").setup({
    image: "#{poster}",
    provider: "#{provider}",
    androidhls: "true",
    hlshtml: "true",
    primary: primary,
    width: "100%",
    height: 400,
    flashplayer: "/assets/jwplayer/jwplayer.flash.swf",
    sources:
    [
    { file: "#{wowza_plain_path(pid, {only_path: false})}", type:"#{type.downcase}"},
    { file: "#{wowza_playlist_path(pid, {only_path: false})}" },
    ],
    tracks: [{
      file: "#{caption_url}",
      label: 'English',
      kind: 'captions',
      "default": true
    }]
    });
    function errorMessage() {
      $(".alert-video").removeClass("hidden").text("There was an error playing this file. Please try on a different device, verify Flash is enabled, or download the file.")
      $(".replace_thumbs").removeClass("hidden")
      $("#player, #player_wrapper").hide()
    }
    jwplayer().on('error', function(){
      errorMessage();
     });
    jwplayer().on('setupError', function(){
      errorMessage();
    });
    jwplayer().on('buffer', function() {
      theTimeout = setTimeout(function() {
        $(".alert-video").removeClass("hidden").text("This video is taking longer than expected to play. You may need to download the file to view it.");
      }, 5000)
    })
    jwplayer().on('ready', function() {
      if (is_safari){
        //defaulting to m3u8 stream for safari since it functions better
        jwplayer().load([{image: "#{poster}", sources:[{ file: "http://libwowza.neu.edu:1935/vod/_definst_/datastreamStore/cerberusData/newfedoradata/datastreamStore/#{dir}/#{type}:" + encodeURIComponent("info%3Afedora%2F#{encoded}%2Fcontent%2Fcontent.0") + "/playlist.m3u8"}]}]);
        // Set poster image for video element to avoid black background for audio-only programs.
        $("#player video").attr("poster", "#{poster}");
      }
    })
    jwplayer().on('play', function() {
      clearTimeout(theTimeout);
      $.ajax("/files/#{pid}/log_stream");
    })
    jwplayer().on('complete', function() {
      window.location = window.location.href
    });
