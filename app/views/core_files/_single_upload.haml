= form_tag("/files", method: "post", multipart: true, id: "singleFileUploadForm") do
  = hidden_field_tag(:collection_id, @collection_id)
  .row
    %fieldset.span4
      %legend
        1. Terms of Service Agreement
      %span.help-block
        Please read and accept the
        %a{href: "/terms" , data: { remote: true} }
          terms of use
      %label.checkbox.required-label{ for: "terms_of_service" }
        I have read and accept the terms of service.
        = check_box_tag 'terms_of_service', 1, nil, data: { activate:  "activate-submit" }
    %filedset.span4
      %legend
        2. File Upload
      = label_tag "file", "File to upload", class: "required-label"
      = file_field_tag 'file', required: true, "aria-required" => true
      %p
        %small
          Please
          %a{:href => "mailto:Library-Repository-Team@neu.edu"} contact the DRS staff
          for help uploading files larger than 500MB.
    - if current_user.proxy_staff?
      %fieldset.span4
        %legend
          3. Proxy
        = label_tag 'upload_type', 'Upload as myself (I will be the depositor)'
        = radio_button_tag 'upload_type', 'personal', false
        = label_tag 'upload_type', 'Upload as proxy (collection owner will be depositor)'
        = radio_button_tag 'upload_type', 'proxy', false
  .progress.progress-striped
    .bar{style: "width:0%"}
  .form-actions
    = submit_tag "Upload", disabled: "true", class: 'btn btn-large btn-primary activate-submit', data: { disable_with: "Please wait..."}, id: "singleSubmit"
:javascript
  $(function () {
    $("#singleSubmit").click(function(e) {
      e.preventDefault();
    });
    $(".progress").hide();
    $('#singleFileUploadForm').fileupload({
        dataType: 'html',
        replaceFileInput: false,
        autoUpload: false,
        add: function (e, data) {
            data.context = $("#singleSubmit")
                .click(function () {
                  $(this).attr("disabled", true);
                  $(this).val("Please wait...");
                  data.submit();
                });
          $(".progress").show();
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress .bar').css(
                'width',
                progress + '%'
            );
        },
        done: function (e, data) {
           url = JSON.parse(data.result);
           url = url.url;
           window.location = url;
        }
    });
  });
  $('#file').bind('change', function() {
    //over 500MB check
    if (this.files[0].size/ 1024000 > 500) {
      $(this).before('<div class="alert alert-warning">The file you chose is larger than 500MB.</div>');
      $("input[type='submit']").prop("disabled", "true");
    } else {
      $(".alert").remove();
      $("input[type='submit']").removeProp("disabled");
    }
  });
