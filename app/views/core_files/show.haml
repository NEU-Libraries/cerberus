- content_for(:description) do
  - @core_file.description
- content_for(:keywords) do
  - @core_file.keyword_list
- content_for(:author) do
  - @core_file.creator_list
- layout_class =  'span6'
%ul.breadcrumb
  - breadcrumb_to_root(@core_file).each do |breadcrumb|
    =breadcrumb

- if @core_file.embargo_date_in_effect?
  %span.embargo-alert= "This item is under embargo and its content will be available for download and viewing on #{@core_file.embargo_release_date(formatted: true)}"

%article{class: ['drs-item', 'drs-item-full'],  data: { drsitem: @core_file.pid } }
  %header
    / %h1.page-header= @core_file
    %h1.page-header
      = "#{@core_file.non_sort} "
      = kramdown_parse(@core_file.title)

  %section.row
    %div{class: layout_class}
      - @content_objects = cached_content_objects(@core_file)
      = render :partial => 'core_files/media_display', locals: {contents: @content_objects}
    %div{itemscope: "", itemtype: "http://schema.org/CreativeWork", class:  [ layout_class, 'drs-item-details'] }
      = render partial: 'actions_nav'
      .tab-content
        #metadata.tab-pane.active
          :javascript
            $('.nav-tabs a').click(function (e) {
              e.preventDefault();
              if ($(this).data("event") == "external") {
                window.open($(this).attr('href'), "_self")
              } else {
                $(this).tab('show');
              }
            });
            var url = document.location.toString();
            if (url.match('#')) {
                $('.nav-tabs a[href=#'+url.split('#')[1]+']').tab('show') ;
            }

          .drs-item-add-details
            = @mods
          - if @content_objects
            %section.drs-item-derivatives
              = render partial: 'show_derivatives', locals: {contents: @content_objects}
        #supplemental-files.tab-pane
          - if !@core_file.supplemental_materials.blank? || !@core_file.supplemental_material_for.blank?
            = render partial: "supplemental_files"
          - if @core_file.page_objects.length > 1
            %div#page-images
        - if current_user_can? :edit, @core_file
          #move.tab-pane
            = render partial: "move"
          #delete.tab-pane
            = render partial: "delete"

#backModal.modal.hide.fade{"aria-hidden" => "true", "aria-labelledby" => "backModalLabel", role: "dialog", tabindex: "-1" }
  .modal-header
    %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", type: "button"} x
    %h3#backModalLabel
      Your file is being processed
  .modal-body
    - if !@parent.blank?
      %p= "Return to #{link_to(kramdown_parse(@parent.title).html_safe, polymorphic_path(@parent))}".html_safe
    - else
      %p= "Return to the #{link_to("Home Page", root_path)}"
  .modal-footer
    %button.btn{"aria-hidden" => "true", "data-dismiss" => "modal" } Close

:javascript
  // It works without the History API, but will clutter up the history
  var history_api = typeof history.pushState !== 'undefined'

  // The previous page asks that it not be returned to
  if ( location.hash == '#no-back' ) {
    // Push "#no-back" onto the history, making it the most recent "page"
    if ( history_api ) history.pushState(null, '', '#stay')
    else location.hash = '#stay'

    // When the back button is pressed, it will harmlessly change the url
    // hash from "#stay" to "#no-back", which triggers this function
    window.onhashchange = function() {
      // User tried to go back; warn user, rinse and repeat
      var lh = location.hash
      if ( lh == '#no-back' ) {
        $("#backModal").modal("show");
        if ( history_api ) history.pushState(null, '', '#stay')
        else location.hash = '#stay'
      }
    }
  }
  $('a[href="#supplemental-files"]').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
    spinner = enable_spinner('page-images');
    var pid = $(this).data("pid");
    get_page("/files/"+pid+"/page_images?per_page=5");
  });
  function get_page(path){
    $.getScript( path, function() {
      picturefill({
        reevaluate: true,
      });
      enable_pagination();
    });
  }
  function enable_pagination(){
    $("#page-images .pagination a").on("click", function(e){
      e.preventDefault();
      get_page($(this).attr("href"));
    });
  }
