- content_for :local_js do
  initialize_audio();
  
  function getSingleUse(id) {
  - rurl = root_url
  - rurl = rurl.slice(0, rurl.length-1) if rurl[rurl.length-1] == "/"
  var resp = $.ajax({
  headers: { Accept: "application/javascript" },
  type: 'get',
  url: "#{rurl}/single_use_link/generate_show/" + id.slice(10),
  async: false,
  });
  return "#{rurl}/" + resp.responseText;
  }
  
  \// Load clipboard swf
  $(document).ready(function() {
  ZeroClipboard.setDefaults({ moviePath: "/assets/ZeroClipboard.swf" });
  $.each($(".copypaste"), function() {
  var clip = new ZeroClipboard();
  clip.on("dataRequested", function(client, args) {
  clip.setText(getSingleUse(this.id));
  })
  clip.on("complete", function(client, args) {
  alert("A single use link to " + args.text + " was copied to your clipboard.")
  })
  clip.on("noflash", function(client, args) {
  alert("Your single-use link: " + getSingleUse(this.id))
  })
  clip.on("wrongflash", function(client, args) {
  alert("Your single-use link: " + getSingleUse(this.id))
  })
  clip.glue($("#" + this.id))
  })
  });
  
  \// hide or show the batch update buttons on page startup
  window.batch_part_on_other_page = #{@batch_part_on_other_page};
  window.batch_size_on_other_page = #{@batch_size_on_other_page};
  window.result_set_size = #{@result_set_size};
  window.document_list_count = #{@document_list.count};
  toggleButtons(#{!@empty_batch});
  
  \// initialize hydra batch edit and set up select all button toggle after checkboxes have been created
  $('#documents').batchEdit({afterCheckboxUpdate: setup_buttontoggle});
- @page_title = application_name + " Dashboard"
- extra_head_content << render_opensearch_response_metadata.html_safe
- content_for :page_header do
  %h2.page-header My Dashboard
- content_for :sidebar do
  = render :partial => 'search_form'
  = render :partial => 'facet_selected'
  = render :partial=>'facets'
- content_for :content do
  #current_user.hide-text= @user.user_key
  = render :partial => 'did_you_mean'
  - render_pagination_info @response, :entry_name=>'item'
  = render 'sort_and_per_page'
  - if params.has_key?("q")
    .alert.alert-info
      %i.icon-search.icon-large
      You searched for:
      %strong= params[:q]
  = render :partial=>'dashboard/document_list'
  = render 'results_pagination'
  = render :partial => 'users/activity_log', :locals => {:events => @events}