-# Bulk upload form

-content_for :page_header do
  %h1.page-header
    =@page_title

- url = '/loaders/' + @loader_short_name
= form_tag(url, action: "create", method: "post", multipart: true, id: "loaderForm") do
  .row
    %fieldset.span4
      %legend
        1. Terms of Service Agreement
      %span.help-block
        Please read and accept the
        %a{href: "/terms" , data: { remote: true} }
          terms of use
      %label.checkbox.required-label{ for: "terms_of_service" }
        I have read and accept the terms of service.
        = check_box_tag 'terms_of_service', 1, nil, data: { activate:  "activate-submit" }
    %fieldset.span4
      %legend
        2. Choose Collection
      = label_tag "parent", "Where do you want to deposit these files?", class: "required-label"
      - if @loader_short_name == 'multipage' || @loader_short_name == 'mods_spreadsheet'
        :javascript
          var collections_for_autocomplete = #{@collections_options.to_json}
        = text_field_tag :parent, "", id: 'collection_autocomplete', required: true
        = hidden_field_tag :parent, "", id:"collection_parent"
      - else
        = select_tag "parent", options_for_select(@collections_options), {prompt: 'Select Collection', required: true}
    %fieldset.span4
      %legend
        3. File Upload
      = label_tag "file", "File to upload", class: "required-label"
      = file_field_tag 'file', required: true, "aria-required" => true
  .progress.progress-striped
    .bar{style: "width:0%"}
  .form-actions
    = submit_tag "Upload", disabled: "true", class: 'btn btn-large btn-primary activate-submit', data: { disable_with: "Please wait..."}, id: "loaderSubmit"
:javascript
  $(function () {
    var file_list = [];
    $(".progress").hide();
    $('#loaderForm').fileupload({
        dataType: 'html',
        replaceFileInput: false,
        autoUpload: false,
        add: function (e, data) {
            data.context = $("#loaderSubmit")
                .click(function (e) {
                  e.preventDefault();
                  $(this).attr("disabled", true);
                  $(this).val("Please wait...");
                });
          $(".progress").show();
          file_list = [data.files[0]]; //this guarantees that the files being uploaded is only the most recently added one
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $('.progress .bar').css(
                'width',
                progress + '%'
            );
            if (progress == 100) {
              $(".progress").after("<div class='alert alert-success'>Your file has been uploaded and is now being processed.</div>");
              spinner = enable_spinner('main-content');
            }
        },
        done: function (e, data) {
          response = JSON.parse(data.result);
          if ('comparison_file_pid' in response) {
            window.location = "/loaders/mods_spreadsheet/preview_compare/"+response.report_id;
          } else if ('preview_file_pid' in response) {
            window.location = "/loaders/mods_spreadsheet/preview/"+response.report_id;
          } else {
            window.location = "/loaders/#{@loader_short_name}/report/"+response.report_id;
          }
        },
        fail: function(data){
          console.log(data);
          window.alert("There was an issue processing your load.");
          window.location = "/my_loaders";
        }
    });
    $('#loaderSubmit').click(function(e){
      e.preventDefault();
      $('#loaderForm').fileupload('send', {files:file_list});
    });
  });
