- content_for(:description) do
  - @set.description
- facet_list ||= facet_field_names
= render partial: 'shared/sets/head'

- if render_constraints(params) != "" || (!params[:sort].nil? && params[:action] == 'recent_deposits')
  %h1.page-header
    %i.icon-search
    %small
      = render_constraints(params)
      - if !params[:sort].nil? && params[:action] == 'recent_deposits'
        = render_constraint_element("Sort", @pretty_sort_name, :classes => ["sort"], :remove => url_for(params.merge(:action=>'show',:sort=>nil,:limit=>nil)))

- drs_items_class = drs_view_class == "list" ? "span9" : "span12"
- sidebar_class = drs_view_class == "list" ? "span3" : "span12"
- pane_small_class = drs_view_class == "list" ? "" : "span3"
- pane_large_class = drs_view_class == "list" ? "" : "span6"
%main.row( role="main" )
  %aside.drs-sidebar{ class: sidebar_class }
    .pane.results-view{ class: pane_small_class }
      %h4.sr-only View layout preferences
      = render partial: 'shared/sets/sets_sidebar'
    .pane.facets{ class: pane_small_class }
      = render :partial=>'catalog/facets', locals: { facet_list: facet_list }
    .pane.pagination-info{ class: pane_large_class }
      = render 'catalog/sort_and_per_page'
    %hr.pane_separator{:style=> ("display:none" if drs_view_class == "grid")}
    .pane.extras{ class: "span12" }
      - if current_user && @set.klass != "Compilation"
        = render :partial=>'shared/save_files'
      - if @set.klass != "Compilation"
        = render :partial => "shared/rss", locals: {smart_col: false}


  %section{ class: drs_items_class }
    -# Main content
    = render :partial => 'catalog/did_you_mean'
    -# Render the results in the main section of the page.
    = render 'catalog/results_pagination'
    = render :partial => 'catalog/document_list'
    = render 'catalog/results_pagination'
    -if @set.klass != "Compilation"
      = render partial: 'shared/sets/bottom_action_menu'

%div#add_compilation_form{ style: 'display:none' }

-if @set.klass == "Compilation"
  = render partial: 'large_modal'
  -if params[:large]
    :javascript
      $('#largeCompilationModal').modal('show')
  :javascript
    $(document).ready(function(){
      $.getScript("#{set_count_path(@set)}");
    });

:javascript
  // It works without the History API, but will clutter up the history
  var history_api = typeof history.pushState !== 'undefined'

  // The previous page asks that it not be returned to
  if ( location.hash == '#no-back' ) {
    // Push "#no-back" onto the history, making it the most recent "page"
    if ( history_api ) history.pushState(null, '', '#stay')
    else location.hash = '#stay'

    // When the back button is pressed, it will harmlessly change the url
    // hash from "#stay" to "#no-back", which triggers this function
    window.onhashchange = function() {
      // User tried to go back; warn user, rinse and repeat
      var lh = location.hash
      if ( lh == '#no-back' ) {
        $("#backModal").modal("show");
        if ( history_api ) history.pushState(null, '', '#stay')
        else location.hash = '#stay'
      }
    }
  }    
