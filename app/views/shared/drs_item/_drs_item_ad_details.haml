- noid = (item.pid).split(":").last
.drs-item-add-details
  -if !item.creators.blank?
    %dl.drs-item-creators
      - item.creators.each_with_index do | creator, i |
        %h5.drs-item-creator
          - if i < 2 and !creator.blank?
            - if i == 0 && item.creators.length > 1
              = "#{kramdown_parse(creator)},"
            -else
              = kramdown_parse(creator)
      - if item.creators.length > 2
        &hellip;
  - if !item.description.blank?
    %dl.drs-item-abstract-list
      %dt.drs-item-abstract-label
        Abstract
      %dd.drs-item-abstract{id: "abstract#{item.pid.delete':'}"}
        - if item.description.length > 120
          %span.ellipsis
            = kramdown_parse(item.description)
          %a(href="#abstract#{item.pid.delete ":"}" data-toggle="ellipsis" style="vertical-align: super;")
            %i.icon-expand-alt
            %span.sr-only
              Expand / collapse toggle
        - else
          = kramdown_parse(item.description)

  - if !@response.nil? && !@response['highlighting'].nil? && !@response['highlighting'][item.pid].nil? && @response['highlighting'][item.pid].key?('all_text_timv')
    %dl.drs-item-highlight-list
      %dt.drs-item-highlight-label
        Full Text Match
      %dd.well.drs-item-highlight
        = "... "
        = @response['highlighting'][item.pid]['all_text_timv'].first.html_safe
        = "... "
  - elsif item.description.blank?
    .list-view-spacer
  -if params[:action] == "get_all_associated_child_files"
    .pull-left
      - if !item.supplemental_material_for.blank?
        %span.label.label-info
          Supplemental Material
      - if !item.instructional_material_for.blank?
        %span.label.label-info
          Instructional Material
      - if !item.transcription_of.blank?
        %span.label.label-info
          Transcription
      - if !item.codebook_for.blank?
        %span.label.label-info
          Codebook
      - if !item.dataset_for.blank?
        %span.label.label-info
          Dataset
      - if !item.figure_for.blank?
        %span.label.label-info
          Figure
  - if !item.under_embargo?(current_user)
    .list-buttons
      = render partial: 'core_files/derivative_btn_group', locals: {contents: @content_objects, list_view: true, item: item, alignment: "pull-right"}
    -if controller_name == 'compilations' && current_user && @compilation && (current_user_can? :edit, @compilation)
      = render partial: 'remove_modal', locals: { entry: item, entry_id: item.pid.gsub(":",""), compilation: @compilation }
  - if !item.date.blank?
    %dl.drs-item-date-list
      %dt.drs-item-date-label
        Date Created
      %dd.drs-item-date
        %time{ "date-time" => item.date }
          = item.date
  - if item.embargo_date_in_effect?
    %dt
      %dl{"style" => "display:inline;"}
        %span.embargo-alert.pull-right= "Contents available #{item.embargo_release_date(formatted: true)}"
  -# Ensure that we only show download buttons if item isn't embargoed
  -# Indicate item is embargoed otherwise.
  %menu.btn-toolbar(type="toolbar")
    - if !item.under_embargo?(current_user) && item.klass == "CoreFile"
      .btn-group
        %a.btn.btn-mini.btn-clear{id: "viewItemDownloads-#{noid}"}(data-pid="#{noid}" href="#" data-toggle="dropdown")
          Downloads
          %i.icon-caret-down
        = render partial: 'core_files/derivative_btn_group', locals: {contents: @content_objects, grid_view: true, item: item}
    .btn-group
      - icon = render partial: 'shared/icon',  locals: { class_string: "icon-comments-alt", alt_text: "Add to " + t('drs.compilations.name')}
      =link_to icon.html_safe , "http://library.northeastern.edu/get-help/tech-support/report-a-problem?resource=#{item.title} - #{item.pid} (#{CGI::escape(request.original_url)})", :target => "_blank", title:  "Report a problem", data: {toggle: "tooltip"}, class: 'btn btn-mini btn-clear'
    -if controller_name == 'compilations' && current_user && (current_user_can? :edit, @compilation)
      .btn-group
        %a.btn.btn-mini.btn-danger{ href: "#removeFromCompilationModal#{item.pid.gsub(":","")}", data: { toggle: "modal" }, title: "Remove from #{t('drs.compilations.name')}" }
          %i.icon-remove
          Remove
          %span.sr-only
            Remove #{item.title} from #{@compilation.title}
