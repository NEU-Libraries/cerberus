-content_for :page_header do
  %h1.page-header
    -if Employee.exists?(current_user.employee_id)
      ="#{@employee.pretty_employee_name}"
      %small
        My Loaders
      %nav{role: "navigation", class: ["pull-right"]}
        %ul.nav.nav-tabs
          %li
            %a{ href: employee_path(@employee) }
              %i.icon-user
              My Collections
          %li
            %a{ href: employee_files_path(@employee) }
              %i.icon-file
              My Deposits
          %li
            %a{ href: employee_communities_path(@employee) }
              %i.icon-group
              My Communities
    -else
      %span.icon-upload-alt( aria-hidden="true")
      My Loaders


%section.row
  %article.span4
    - if !current_user.blank? && (current_user.admin? || current_user.admin_group?)
      %h3 Remediation
      =link_to("Replace Binary", replacement_file_path, class: "btn btn-lg btn-primary")
      %br
      %br

      %h3 Staged Upload
      =link_to("Boston Globe", "/upload", class: "btn btn-lg btn-primary")
      %br
      %br

    - if !current_user.nil? && current_user.xml_loader?
      %h3 API
      =link_to("Generate Token", generate_token_path, class: "btn btn-lg btn-primary")
      %br
      %br

    - if !current_user.nil? && current_user.spreadsheet_loader?
      %h3 Validate
      =link_to("Spreadsheet", new_spreadsheet_validation_path, class: "btn btn-lg btn-primary")
      %br
      %br

    %h3 My Loaders
    - if !current_user.nil?
      - t('loaders').each do |key, loader|
        - if current_user.send("#{loader[:short_name]}_loader?")
          = link_to(loader[:long_name], "loaders/#{loader[:short_name]}/new", class: "btn btn-lg btn-primary")
          %br
          %br

  %article.span8
    %h3 Past Loads
    = render template: "/loaders/index", locals: {loads: @loads}
